Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.

----------------------------------------*********----------------------------------------------
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<String,List<String>> map = new HashMap<>();
        List<List<String>> ans = new ArrayList<>();

        for(String s: strs){
            char[] ch = s.toCharArray();
            Arrays.sort(ch);
            String sortedStr = new String(ch);

            if(map.containsKey(sortedStr)){
                map.get(sortedStr).add(s);
            }else{
                 List<String> newList = new ArrayList<>();
                 newList.add(s);
                 map.put(sortedStr, newList);
            }
        }
        map.forEach((key, values) -> {
            ans.add(values);
        });
        return ans;
    }
}
